# -*- coding: utf-8 -*-
"""3/23과제.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NCiXXP7C6vu4tY5IZpaqnskAV1ZC-mRg
"""

import random
def RCP():
  print("==============Restart=============")
  idx = ["가위", "바위", "보"]
  you = input("가위 바위 보! :")
  com = random.choice(idx)
  print(f"컴퓨터는 {com}")
  if you == com:
    print("비겼습니다.")
  elif (you, com) in [("가위", "바위"), ("바위", "보"), ("보", "가위")]:
    print("컴퓨터가 이겼네요.")
  else:
    print("니가 이겼구나")

RCP()

def talking(n):
  if n == "고양이":
    print("야옹")
  elif n == "김지욱":
    print("안녕하세요. 만나서 반갑습니다.")
  else:
    print(f"나는 {n}가 아니라 알락꼬리꼬마도요야")


N = input()
talking(N)

def start():
  for i in range(10, 0, -1):
    print("발사")
    print(i)
start()

def start():
  cnt = 10
  while True:
    print("발사")
    print(cnt)
    if cnt == 1:
      break
    cnt -= 1
start()

class Bank():
  account = 1000
  limit_for_loan = 500
  limit_for_withdraw = 100

  def withdraw_money(self, amount):
    count = amount // self.limit_for_withdraw
    rest = amount % self.limit_for_withdraw
    for i in range(count):
      print(f"This is your money - {self.limit_for_withdraw}")
    if rest != 0 :
      print(f"This is your money - {rest}")

  def give_me_money(self, amount):
    if amount <= self.account:
      self.withdraw_money(amount)
    elif amount <= (self.account + self.limit_for_loan):
      print("wait")
    else:
      print("Not enough money")

hana_bank = Bank()
sinhan_bank = Bank()
hana_bank.give_me_money(950)

class Person:
  def __init__(self, name, age, height):
    self.name = name
    self.age = age
    self.height = height

  def yell(self):
    print("아?")
  
  def introduce(self):
    print(f"안녕하세요. 제 이름은 {self.name}이고, 나이는 {self.age}살이며, 제 키는 {self.height}")


class Developer(Person):
  keyboard = "기계식"
  def __init__(self, name, age,height):
    super().__init__(name, age, height)
  
  def yell(self):
    print("어?")
  
class Designer(Person):
  def __init__(self, name, age,height):
    super().__init__(name, age, height)
    self.disease = 0


class ProductManager(Person):
  def __init__(self, name, age,height):
    super().__init__(name, age, height)

  def yell(self):
    print("개발자님 여기 오류있어요")
  
  def aging(self):
    self.age -= 2
    self.height -= 5
    print("개발자를 새로 뽑아야 하나...")
    Developer.keyboard = "멤브레인"

d1 = Developer("이야호", 3, 100)
d2 = Designer("무야호", 5, 120)
p1 = ProductManager("유야호", 7, 140)
d1.introduce()
d1.yell()
d2.introduce()
d2.yell()
p1.introduce()
p1.yell()
p1.aging()
p1.introduce()

