# -*- coding: utf-8 -*-
"""3/23 class 실습.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FV460kCTN9ERIVEhOiPIqpP_24urPNl-
"""

import requests as req

res_get = req.get('https://jsonplaceholder.typicode.com/posts')

print(type(res_get))

print(res_get.text)

res_get_id = req.get('https://jsonplaceholder.typicode.com/posts/1')
print(res_get_id.text)

dic = dict()
dic["userId"] = 1
dic["id"] = 1
dic["title"] = "kisung"
dic["body"] = "kisung's body"
res_post = req.post("https://jsonplaceholder.typicode.com/posts", data = dic)
print(res_post)

print(res_post.content)

container = {'title':'kisung', 'body':'kisung\'s body', 'userId':1, 'id': 1}
res_patch = req.patch("https://jsonplaceholder.typicode.com/posts/1", data = container)
res_patch.text

res_delete = req.delete("https://jsonplaceholder.typicode.com/posts/1")
res_delete

container = {"serviceKey": "servoceLeYMHLZDW3QbPhK5DX7IMqED8zFwVaaqF9OFJJFkpHGyoe9xc5hjU0VD+R3W7XTFyUUdcTZALcVmR+7X19z16cng==",
             'numOfRows':10, 'pageNo':1, 'base_date' : '20230320', 'base_time':'0500', 'nx':'55', 'ny':'127', 'dataType' :'JSON'}
res_get = req.get("http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst", params=container)

print(res_get.text)

from bs4 import BeautifulSoup
import pandas as pd
import requests as req


soup = BeautifulSoup(res.text, "html.parser")

e = soup.select('#comment225751 > div.comment_content')[0]
e.text.strip()

li_comment = soup.select('div.comment_content')
li_comments_cleaned = [e.text.strip() for e in li_comment]

import pandas as pd

context = {"comments" : li_comments_cleaned, "comments2": li_comments_cleaned}
pd.DataFrame(context)



# 여기서부터 과제입니다

from bs4 import BeautifulSoup
import pandas as pd
import requests as req

target_url = 'http://opentutorials.org/course/1'

res = req.get(target_url)
soup = BeautifulSoup(res.text, "html.parser")


li_comments = soup.find_all(class_="comment_content")
li_comments_cleaned = [e.text.strip() for e in li_comments]
li_name = soup.select('div.name.time > strong')
li_name_cleaned = [e.text for e in li_name]
li_time = soup.select('div.name.time > a > time')
li_time_cleaned = [e.text for e in li_time]

container = {'name': li_name_cleaned, 'time': li_time_cleaned, 'comments' : li_comments_cleaned}
df_table = pd.DataFrame(container)
df_table

